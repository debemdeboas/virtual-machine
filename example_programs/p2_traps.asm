; INPUT TRAP -> READ FIB. ARRAY SIZE
LDI R8, 1
LDI R9, 255
TRAP R8, R9

; MAIN PROGRAM
LDI R0, 256 ; OUTPUT MEMORY BLOCK
LDD R7, [255] ; LOAD THE VALUE STORED IN POSITION 255
LDI R2, 15 ; SKIP TO LINE 16 IF R7 >= 0
JMPIG R2, R7
JMPIE R2, R7
LDI R3, -1
STX [R0], R3
STOP
; WRITE `R1` NUMBERS OF THE FIB. SEQUENCE
LDI R4, 1
SUB R4, R7
LDI R5, 27
JMPIE R5, R4
LDI R4, 2
SUB R4, R7
LDI R5, 31
JMPIE R5, R4
JMP 37
; WRITE 0 TO MEMORY AND STOP
LDI R3, 0
STX [R0], R3
STOP
; WRITE 0, 1 TO MEMORY AND STOP
LDI R3, 0
STX [R0], R3
ADDI R3, 1
ADDI R0, 1
STX [R0], R3
STOP
; WRITE FIB SEQUENCE `R7` TIMES
LDI R1, 0
LDI R2, 1
STX [R0], R1
ADDI R0, 1
STX [R0], R2
ADDI R0, 1
LDI R6, 46 ; LOOP CONTROL
LDI R5, 1 ; LOOP COUNTER
SUBI R7, 2 ; REMOVE 2 ENTRIES FROM `FOR` CLAUSE TO COMPENSATE FOR THE ALREADY-WRITTEN 0, 1
; START LOOP
LDI R3, 0
ADD R3, R1 ; R3 = R1
LDI R1, 0
ADD R1, R2 ; R1 = R2
ADD R2, R3
STX [R0], R2
ADDI R0, 1
SUB R7, R5 ; FOR --
JMPIG R6, R7
STOP
